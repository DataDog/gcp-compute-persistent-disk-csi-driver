ARG BASE_IMAGE
ARG BUILDER_IMAGE

FROM --platform=$BUILDPLATFORM $BUILDER_IMAGE as builder

ARG STAGINGVERSION
ARG TARGETPLATFORM
ENV GOTOOLCHAIN auto

WORKDIR /go/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver
ADD . .
RUN GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d '/') GCE_PD_CSI_STAGING_VERSION=$STAGINGVERSION make gce-pd-driver

# Start from BASE_IMAGE.
FROM $BASE_IMAGE as output-image

# Install necessary dependencies
# google_nvme_id script depends on the following packages: nvme-cli, xxd, bash
USER root
RUN clean-apt install util-linux e2fsprogs mount ca-certificates udev xfsprogs nvme-cli xxd bash
USER dog

# Copy NVME support required script and rules into base image.
COPY deploy/kubernetes/udev/google_nvme_id /lib/udev_containerized/google_nvme_id

# Build stage used for validation of the output-image
# See validate-container-linux-* targets in Makefile
FROM output-image as validation-image

COPY --from=output-image /usr/bin/ldd /usr/bin/find /usr/bin/xargs /usr/bin/
COPY --from=builder /go/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver/hack/print-missing-deps.sh /print-missing-deps.sh
SHELL ["/bin/bash", "-c"]
RUN /print-missing-deps.sh

# Final build stage, create the real Docker image with ENTRYPOINT
FROM output-image

ENTRYPOINT ["/gce-pd-csi-driver"]
